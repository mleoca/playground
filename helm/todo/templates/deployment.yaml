apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "todo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "todo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "todo.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "todo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh","-c"]
          args: ["cd /opt/todolist/; pip install -r requirements.txt; flask run --host=0.0.0.0"]
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_URL
              value: postgres-master
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_PORT
              value: '5432'
            - name: FLASK_APP
              value: app
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ .Chart.Name }}
          ports:
            - name: flask
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            exec:
              command: ["/bin/bash","-c","curl -m 30 -s http://127.0.0.1:5000/"]
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: ["/bin/bash","-c","curl -m 30 -s http://127.0.0.1:5000/"]
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Chart.Name }}
              mountPath: /opt/todolist/main.py
              subPath: main.py
            - name: {{ .Chart.Name }}
              mountPath: /opt/todolist/requirements.txt
              subPath: requirements.txt
            - name: {{ .Chart.Name }}
              mountPath: /opt/todolist/app/__init__.py
              subPath: __init__.py
            - name: {{ .Chart.Name }}
              mountPath: /opt/todolist/app/database.py
              subPath: database.py
            - name: {{ .Chart.Name }}
              mountPath: /opt/todolist/app/routes.py
              subPath: routes.py
            - name: {{ .Chart.Name }}
              mountPath: /opt/todolist/app/templates/base.html
              subPath: base.html
            - mountPath: /opt/todolist/app/templates/index.html
              name: {{ .Chart.Name }}
              subPath: index.html         
            - mountPath: /opt/todolist/app/templates/update.html
              name: {{ .Chart.Name }}
              subPath: update.html   
      volumes:
        - name: {{ .Chart.Name }}
          configMap:
            name: {{ .Chart.Name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
